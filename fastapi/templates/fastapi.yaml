apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    io.kompose.service: api
  name: api
spec:
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  selector:
    io.kompose.service: api
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o compose --pvc-request-size 1Gi
    kompose.image-pull-policy: IfNotPresent
    kompose.version: 1.24.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api
  strategy: {}
  template:
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: api
    spec:
      containers:
      - image: crblanaru/fastapi:{{ .Values.tag }}
        imagePullPolicy: IfNotPresent
        name: api
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
            memory: "314572800"
          requests:
            cpu: 500m
            memory: "209715200"
      restartPolicy: Always
status: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/target-type: ip
    nginx.ingress.kubernetes.io/use-regex: "true"
  labels:
    app.kubernetes.io/managed-by: Bunnyshell
  name: {{ .Values.unique }}-ingress
spec:
  ingressClassName: bns-nginx
  rules:
  - host: api-{{ .Values.unique }}.bunnyenv.com
    http:
      paths:
      - backend:
          service:
            name: api
            port:
              number: 80
        path: /
        pathType: Prefix
